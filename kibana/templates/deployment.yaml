apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kibana.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "kibana.name" . }}
    helm.sh/chart: {{ include "kibana.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kibana.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "kibana.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
      - name: localtime
        hostPath:
          path: /etc/localtime
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: SERVER_NAME
              value: "{{ .Values.config.host }}"
            - name: SERVER_PORT
              value: "{{ .Values.service.port }}"
            - name: ELASTICSEARCH_URL
              value: "{{ .Values.config.elasticsearch.scheme }}://{{ .Values.config.elasticsearch.host }}:{{ .Values.config.elasticsearch.port }}"
          volumeMounts:
            - name: localtime
              mountPath: /etc/localtime
              readOnly: true
          livenessProbe:
            httpGet:
              path: /status
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /status
              port: http
            initialDelaySeconds: 10
